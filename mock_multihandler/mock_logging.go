// Code generated by MockGen. DO NOT EDIT.
// Source: logging.go

// Package mock_multihandler is a generated GoMock package.
package mock_multihandler

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
	time "time"
)

// MockLoggingEngine is a mock of LoggingEngine interface
type MockLoggingEngine struct {
	ctrl     *gomock.Controller
	recorder *MockLoggingEngineMockRecorder
}

// MockLoggingEngineMockRecorder is the mock recorder for MockLoggingEngine
type MockLoggingEngineMockRecorder struct {
	mock *MockLoggingEngine
}

// NewMockLoggingEngine creates a new mock instance
func NewMockLoggingEngine(ctrl *gomock.Controller) *MockLoggingEngine {
	mock := &MockLoggingEngine{ctrl: ctrl}
	mock.recorder = &MockLoggingEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoggingEngine) EXPECT() *MockLoggingEngineMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *MockLoggingEngine) Write(req *http.Request, status, bodyBytesSent int, timestamp time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", req, status, bodyBytesSent, timestamp)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockLoggingEngineMockRecorder) Write(req, status, bodyBytesSent, timestamp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockLoggingEngine)(nil).Write), req, status, bodyBytesSent, timestamp)
}

// WritePanic mocks base method
func (m *MockLoggingEngine) WritePanic(req *http.Request, status, bodyBytesSent int, timestamp time.Time, recovered interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WritePanic", req, status, bodyBytesSent, timestamp, recovered)
	ret0, _ := ret[0].(error)
	return ret0
}

// WritePanic indicates an expected call of WritePanic
func (mr *MockLoggingEngineMockRecorder) WritePanic(req, status, bodyBytesSent, timestamp, recovered interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WritePanic", reflect.TypeOf((*MockLoggingEngine)(nil).WritePanic), req, status, bodyBytesSent, timestamp, recovered)
}
